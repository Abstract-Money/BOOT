permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
name: test
env:
  CODECOV_TOKEN: 62fac3fe-498a-4449-a00d-a9b30b443acf
jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      # https://twitter.com/jonhoo/status/1571290371124260865
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets
      - name: cargo test network config
        run: |
          CW_ORCH_NETWORKS='{"juno-1":{"chain_id":"joono-1","gas_denom":"gas_denom","gas_price":64.0,"grpc_urls":["http://juno-grpc.com:123"],"lcd_url":"http://juno-lcd.com:321","fcd_url":"http://juno-fcd.com:234","network_info":{"chain_name":"joono","pub_address_prefix":"joo","coin_type":42},"kind":"local"},"neutron-1":{"gas_price":1.23},"abstr-1":{"kind":"mainnet","chain_id":"juno-1","gas_denom":"ujuno","gas_price":0.075,"grpc_urls":["http://juno-grpc.polkachu.com:12690"],"network_info":{"chain_name":"juno","pub_address_prefix":"juno","coin_type":118}}}'
          echo -n "$CW_ORCH_NETWORKS" > ~/.cw-orchestrator/networks.json
          cargo test --package cw-orch-daemon --test chain_info -- --ignored

  docs:
    runs-on: ubuntu-latest
    name: doc-tests / stable
    strategy:
      matrix:
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test --doc
        run: cargo test --doc --locked --all-features

  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
